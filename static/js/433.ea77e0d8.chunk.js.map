{"version":3,"file":"static/js/433.ea77e0d8.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/theme', name: 'Theme', element: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', element: Colors },\n  { path: '/theme/typography', name: 'Typography', element: Typography },\n  { path: '/base', name: 'Base', element: Cards, exact: true },\n  { path: '/base/accordion', name: 'Accordion', element: Accordion },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', element: Cards },\n  { path: '/base/carousels', name: 'Carousel', element: Carousels },\n  { path: '/base/collapses', name: 'Collapse', element: Collapses },\n  { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n  { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n  { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n]\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\n\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n      </CHeaderNav>        \n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n  cilBasket,\n  cilCash,\n  cilCart,\n  cilDollar,\n  cilMoney,\n  cilStore,\n  cilRestaurant,\n  cilAccountLogout,\n  cilClipboard,\n  cilClearAll,\n  cilCalendar,\n  cilUser,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Inicio',\n    to: '/dashboard',\n    icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Inventario',\n  },\n  {\n    component: CNavItem,\n    name: 'Cocina',\n    to: '/theme/colors',\n    icon: <CIcon icon={cilRestaurant} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Produccion',\n    to: '/theme/typography',\n    icon: <CIcon icon={cilBasket} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Fiananzas',\n  },\n  {\n    component: CNavGroup,\n    name: 'Gastos',\n    to: '/base',\n    icon: <CIcon icon={cilDollar} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Proovedores',\n        to: '/base/accordion',\n      },\n      {\n        component: CNavItem,\n        name: 'Desechable',\n        to: '/base/breadcrumbs',\n      },\n      {\n        component: CNavItem,\n        name: 'Insumos',\n        to: '/base/cards',\n      },\n      {\n        component: CNavItem,\n        name: 'Gastos Local',\n        to: '/base/carousels',\n      },\n      {\n        component: CNavItem,\n        name: 'Empleados',\n        to: '/base/collapses',\n      },\n    ],\n  },\n  {\n    component: CNavGroup,\n    name: 'Ventas',\n    to: '/buttons',\n    icon: <CIcon icon={cilMoney} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Efectivo',\n        to: '/buttons/buttons',\n      },\n      {\n        component: CNavItem,\n        name: 'Tarjeta',\n        to: '/buttons/button-groups',\n      },\n      {\n        component: CNavItem,\n        name: 'Plataforma Digital',\n        to: '/buttons/dropdowns',\n      },\n    ],\n  },\n  {\n    component: CNavItem,\n    name: 'Notas',\n    to: '/icons',\n    icon: <CIcon icon={cilClipboard} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n     \n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Dashboard","React","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","Buttons","ButtonGroups","Dropdowns","CoreUIIcons","path","exact","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","AppContent","lg","Suspense","fallback","color","idx","to","replace","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","onClick","type","icon","cilMenu","size","component","NavLink","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","navGroup","String","toggler","visible","startsWith","CNavItem","cilNotes","customClassName","CNavTitle","cilRestaurant","cilBasket","CNavGroup","cilDollar","cilMoney","cilClipboard","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","navigation"],"sourceRoot":""}