{"version":3,"file":"static/js/882.be2a45a0.chunk.js","mappings":"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","sources":["views/buttons/buttons/Buttons.js"],"sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from 'reactstrap'\n\nconst data = [\n  {Id: 1, Producto: 'Shawarma', Cantidad: 0 },\n  {Id: 2, Producto: 'Torta/keila', Cantidad: 0 },\n  {Id: 3, Producto: 'Taco Arabe', Cantidad: 0 },\n  {Id: 4, Producto: 'Taco oriental', Cantidad: 0 },\n  {Id: 5, Producto: 'Quesadilla arabe', Cantidad: 0 },\n  { Id: 6, Producto: 'Quesadilla natural arabe', Cantidad: 0 },\n  {Id: 7, Producto: 'Quesadilla Oriental', Cantidad: 0 },\n  {Id: 8, Producto: 'Orden de jocoque', Cantidad: 0 },\n  {Id: 9, Producto: 'Queso fundido', Cantidad: 0 },\n  {Id: 10, Producto: 'Queso fundido con carne', Cantidad: 0 },\n  {Id: 11, Producto: 'Pan Pita extra', Cantidad: 0 },\n  {Id: 12, Producto: 'Orden Tzatziqui', Cantidad: 0 },\n  {Id: 13, Producto: 'Orden Toum', Cantidad: 0 },\n  {Id: 14, Producto: 'Agua', Cantidad: 0 },\n  {Id: 15, Producto: 'Refresco', Cantidad: 0 },\n  {Id: 16, Producto: 'De Buen Diente', Cantidad: 0 },\n  {Id: 17, Producto: 'El Light', Cantidad: 0 },\n  {Id: 18, Producto: 'El Sencillito', Cantidad: 0 },\n  {Id: 19, Producto: 'Sin Nombre 1', Cantidad: 0 },\n  {Id: 20, Producto: 'Sin Nombre 2', Cantidad: 0 },\n  {Id: 21, Producto: 'Para Todos', Cantidad: 0 },\n  ]\n\n\nclass App2 extends React.Component {\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      Id: \"\",\n      Producto: \"\",\n      Cantidad: \"\",\n    },\n  };\n\n\n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n\n\n\n  editar = (dato) => {\n    var contador = 0;\n    var arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.Id == registro.Id) {\n        arreglo[contador].Producto = dato.Producto;\n        arreglo[contador].Cantidad = dato.Cantidad;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n\n\n\n  eliminar = (dato) => {\n    var opcion = window.confirm('Estás Seguro que deseas Eliminar el elemento '+ dato.Id);\n    if (opcion == true) {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.Id == registro.Id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n\n\n  insertar= () => {\n    var valorNuevo= {...this.state.form};\n    valorNuevo.Id=this.state.data.length+1;\n    var lista= this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  }\n\n\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n\n\n\n\nrender() {\n  return (\n    <>\n    <Container>\n        <br/>\n        <center><h1>Compra en efectivo</h1></center>\n        <br/>\n          <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Crear</Button>\n          <br/>\n          <br/>\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Producto</th>\n                <th>Cantidad</th>\n                <th>Acción</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.Id}>\n                  <td>{dato.Id}</td>\n                  <td>{dato.Producto}</td>\n                  <td>{dato.Cantidad}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={()=> this.eliminar(dato)}>Eliminar</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n           <div><h3>Editar Registro</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n               Id:\n              </label>\n            \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.Id}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Producto: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"Producto\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.Producto}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Cantidad: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"Cantidad\"\n                type=\"number\"\n                onChange={this.handleChange}\n                value={this.state.form.Cantidad}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button\n              color=\"danger\"\n              onClick={() => this.cerrarModalActualizar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n           <div><h3>Insertar Producto</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n                Id: \n              </label>\n              \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length+1}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Producto: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"Producto\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Cantidad: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"Cantidad\"\n                type=\"number\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.insertar()}\n            >\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n  </>\n  )\n}\n}\nexport default App2"],"names":["data","Id","Producto","Cantidad","App2","state","modalActualizar","modalInsertar","form","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","eliminar","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","name","value","color","onClick","this","isOpen","className","readOnly","type","onChange","React"],"sourceRoot":""}