{"version":3,"file":"static/js/17.6e4730b4.chunk.js","mappings":"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","sources":["views/icons/coreui-icons/CoreUIIcons.js"],"sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from 'reactstrap'\n\nconst data = [\n  {Id: 1, Producto: 'Checar el gas'},\n  ]\n\n\nclass App2 extends React.Component {\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      Id: \"\",\n      Producto: \"\",\n    },\n  };\n\n\n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n\n\n\n  editar = (dato) => {\n    var contador = 0;\n    var arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.Id == registro.Id) {\n        arreglo[contador].Producto = dato.Producto;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n\n\n\n  eliminar = (dato) => {\n    var opcion = window.confirm('Estás Seguro que deseas Eliminar el elemento '+ dato.Id);\n    if (opcion == true) {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.Id == registro.Id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n\n\n  insertar= () => {\n    var valorNuevo= {...this.state.form};\n    valorNuevo.Id=this.state.data.length+1;\n    var lista= this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  }\n\n\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n\n\n\n\nrender() {\n  return (\n    <>\n    <Container>\n        <br/>\n        <center><h1>Notas Generales</h1></center>\n        <br/>\n          <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Crear</Button>\n          <br/>\n          <br/>\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Nota</th>\n                <th>Acción</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.Id}>\n                  <td>{dato.Id}</td>\n                  <td>{dato.Producto}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={()=> this.eliminar(dato)}>Eliminar</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n           <div><h3>Editar Registro</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n               Id:\n              </label>\n            \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.Id}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Nota: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"Producto\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.Producto}\n              />\n            </FormGroup>\n            \n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button\n              color=\"danger\"\n              onClick={() => this.cerrarModalActualizar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n           <div><h3>Insertar Nota</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n                Id: \n              </label>\n              \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length+1}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Nota: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"Producto\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            \n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.insertar()}\n            >\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n  </>\n  )\n}\n}\nexport default App2"],"names":["data","Id","Producto","App2","state","modalActualizar","modalInsertar","form","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","eliminar","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","name","value","color","onClick","this","isOpen","className","readOnly","type","onChange","React"],"sourceRoot":""}